A test library for creating and reading Java Script Object Notation (JSON).

Please see the example {{JSON Library}} project.

{{jspringbot-github:sample-json|Sample Project}}


= Configuration =

Configure the following to use jspringbot-json.

1. Add this artifact in maven dependency

|  <dependencies>
|    <dependency>
|      <groupId>org.jspringbot</groupId>
|      <artifactId>jspringbot-json</artifactId>
|    </dependency>
|  </dependencies>

2. Import spring-json in {{jspringbot-global.xml}}

| <import resource="classpath:spring/spring-json.xml"/>

3. If you are going to use json expression language support, follow {{jspringbot-doc:expression}} configuration.

4. Add {{JSpringBotGlobal}} library in the in the test suite settings.

| *** Settings *** |
| Library | JSpringBotGlobal |


== Read Example ==

*Given:*

| { "store": {
|    "book": [
|      { "category": "reference",
|        "author": "Nigel Rees",
|        "title": "Sayings of the Century",
|        "price": 8.95
|      },
|      { "category": "fiction",
|        "author": "Evelyn Waugh",
|        "title": "Sword of Honour",
|        "price": 12.99,
|        "isbn": "0-553-21311-3"
|      }
|    ],
|    "bicycle": {
|      "model": "bmx",
|      "color": "red",
|      "price": 19.95
|    }
|  }
| }

*Read:*

| ${authors}=           | `Get JSON Values` | store.book[*].author |
| ${firstBookAuthor}=   | `Get JSON Value`  | store.book[1].author |
| ${referenceBooks}=    | `Get JSON Values` | store.book[?(@.category == 'reference')] |
| ${moreThan10Books}=   | `Get JSON Values` | store.book[?(@.price > 10)] |
| ${withIsbnBooks}=     | `Get JSON Values` | store.book[?(@.isbn)] |
=>

| ${authors}             # All authors
| ${firstBookAuthor}     # Author of first book in store
| ${referenceBooks}      # All books with category = "reference"
| ${moreThan10Books}     # All books that cost more than 10 USD
| ${withIsbnBooks}       # All books that have isbn

== Simple Object Creation Example ==

Use these keywords to generate the output below.

| `Start JSON Object`           |         |            |
| `Start JSON Object`           | bicycle |            |
| `Add JSON Object String Item` | model   | bmx        |
| `Add JSON Object String Item` | color   | red        |
| `Add JSON Object String Item` | price   | $[d:19.95] |
| `End JSON Object`             |
| `End JSON Object`             |
| ${jsonString}=                | `Create JSON String` |

{{jsonString}}:

| {
|   "bicycle": {
|     "model": "bmx",
|     "color": "red",
|     "price": 19.95
|   }
| }

== List of Objects Creation Example ==

Use these keywords to generate the output below.

| `Start JSON Object`           |          |                        |
| `Start JSON List`             | book     |
| `Start JSON Object`           |
| `Add JSON Object String Item` | category | reference              |
| `Add JSON Object String Item` | author   | Nigel Rees             |
| `Add JSON Object String Item` | title    | Sayings of the Century |
| `Add JSON Object String Item` | price    | $[d:8.95]              |
| `End JSON Object`             |
| `Start JSON Object`           |
| `Add JSON Object String Item` | category | fiction                |
| `Add JSON Object String Item` | author   | Evelyn Waugh           |
| `Add JSON Object String Item` | title    | Sword of Honour        |
| `Add JSON Object String Item` | price    | $[d:12.99]             |
| `Add JSON Object String Item` | isbn     | 0-553-21311-3          |
| `End JSON Object`             |
| `Start JSON List`             |
| `End JSON Object`             |
| ${jsonString}=                | `Create JSON String` |

{{jsonString}}:

| {
|   "book": [
|      { "category": "reference",
|        "author": "Nigel Rees",
|        "title": "Sayings of the Century",
|        "price": 8.95
|      },
|      { "category": "fiction",
|        "author": "Evelyn Waugh",
|        "title": "Sword of Honour",
|        "price": 12.99,
|        "isbn": "0-553-21311-3"
|      }
|    ]
| }

== Expression Support ==

{{JSON Library}} has supported jSpringBot expression language. This library exposes utility methods to easily retrieve
JSON values.

Below shows the exposed JSON methods:

| *Name*                                  | *Description*                                              |
| {{json:objects(jsonPath)}}              | This will return a list of objects given the {{jsonPath}}. |
| {{json:property(jsonObject, property)}} | This will return the object property given the {{jsonObject}} and its {{property}}. If {{jsonObject}} is {{null}} this will return the root {{property}}. |
| {{json:property(propertyJsonPath)}}     | This will return the value of the given the {{propertyJsonPath}}. |
| {{json:property(jsonPath, property)}}   | This will return the {{property}} value of the first retrieved object given the {{jsonPath}}. |

*Example:*

| {
|   "book": [
|      { "category": "reference",
|        "author": "Nigel Rees",
|        "title": "Sayings of the Century",
|        "price": 8.95
|      },
|      { "category": "fiction",
|        "author": "Evelyn Waugh",
|        "title": "Sword of Honour",
|        "price": 12.99,
|        "isbn": "0-553-21311-3"
|      }
|    ]
| }

=>

{{Test Case}}

| `EL Should Be Equal`      | $[json:property('book[1].category')]  | reference    |                            |
| `EL Should Be Equal`      | $[json:property('book[1].price')]     | $[d:8.95]    |
| `EL Should Be Equal`      | $[json:property('book[1]', 'author')] | Nigel Rees   |
| `EL Run Keyword For Each` | Process Book                          | book         | $[json:objects('book[*]')] |

{{Process Book Keyword}}

| `EL Add Variable`         | author                                |  $[json:property(book, 'author')] |
| `EL Should Be True`       | $[author eq 'Nigel Rees' or author eq 'Evelyn Waugh']  |

